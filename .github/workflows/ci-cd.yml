name: CI/CD Pipeline

on:
  push:
    branches:
      - main # 当代码合并到 main 分支时触发

permissions:
  contents: write # 允许写入内容以更新版本和创建发布
  pull-requests: write # 如果需要自动创建或更新 Pull Request（例如 for changesets next 模式）
  id-token: write # 用于 OIDC，如果需要发布到私有 registry 或进行其他身份验证

jobs:
  build-and-publish:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu runner

    steps:
      - name: 📝 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史，changesets 需要

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 推荐使用 LTS 版本
          registry-url: 'https://registry.npmjs.org/' # 指向 npm 官方 registry
          scope: '@arvin-shu' # 替换为你的 npm scope，例如：@your-org。如果你的包没有scope，可以省略此行。
          token: ${{ secrets.NPM_TOKEN }} # 使用你的 npm token 进行认证

      - name: 📥 Install pnpm
        run: npm install -g pnpm@10.13.1 # 全局安装 pnpm

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile # 安装所有项目依赖

      # ====== 关键调试步骤 ======
      - name: 🕵️ Show npm config userconfig path
        run: npm config get userconfig

      - name: 🕵️ Show .npmrc (actual)
        run: cat $(npm config get userconfig)

      - name: 🕵️ Check npm registry
        run: npm config get registry

      - name: 🕵️ Who am I
        run: npx npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # ========================

      - name: 🏷️ Version packages (changesets)
        id: changesets_version
        run: |
          # 只有当存在 changeset 文件时才执行版本升级和changelog生成
          if [ -d ".changeset" ] && [ "$(ls -A .changeset | grep '.md$')" ]; then
            echo "Changeset files detected. Bumping versions and generating changelog."
            npx changeset version # 递归 bump 受影响包的版本，并生成 changelog
            echo "::set-output name=has_changes::true"
          else
            echo "No changeset files found. Skipping version bump."
            echo "::set-output name=has_changes::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # changesets 可能需要此token来推送到仓库

      - name: 📦 Full build
        run: pnpm build # 对所有包进行全量 build

      - name: 🚀 Publish packages (changesets)
        if: steps.changesets_version.outputs.has_changes == 'true' # 只有当有版本变更时才执行发布
        run: npx changeset publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ⬆️ Push changes back to main branch
        if: steps.changesets_version.outputs.has_changes == 'true' # 只有当有版本变更时才推回
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: release changes [skip ci]" # 提交版本和changelog文件
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
